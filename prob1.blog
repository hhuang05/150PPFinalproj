/* Author Moses Huang
   Created Date: 11/10/2014 
   Solution to PPAML Small problem 1 - Bayesian Linear regression

   TODO: 
    1. What kind of memoization is happening here?

*/

/*Generate Chi-square distribution, which is the sum of K ~ N(0,1) random numbers */
random Real n1 ~ Gaussian(0.0, 1.0);
random Real n2 ~ Gaussian(0.0, 1.0);
random Real n3 ~ Gaussian(0.0, 1.0);
random Real n4 ~ Gaussian(0.0, 1.0);
random Real n5 ~ Gaussian(0.0, 1.0);
random Real n6 ~ Gaussian(0.0, 1.0);
random Real n7 ~ Gaussian(0.0, 1.0);
random Real n8 ~ Gaussian(0.0, 1.0);
random Real n9 ~ Gaussian(0.0, 1.0);
random Real n10 ~ Gaussian(0.0, 1.0);
random Real n11 ~ Gaussian(0.0, 1.0);
random Real n12 ~ Gaussian(0.0, 1.0);
random Real n13 ~ Gaussian(0.0, 1.0);
random Real n14 ~ Gaussian(0.0, 1.0);
random Real n15 ~ Gaussian(0.0, 1.0);

random Real ChiSquare(Integer dof) {
    if (dof == 1) then = n1
    else if (dof == 2) then = n2 + n3
    else if (dof == 3) then = n4 + n5 + n6
    else if (dof == 4) then = n7 + n8 + n9 + n10
    else if (dof == 5) then = n11 + n12 + n13 + n14 + n15
};

/* Define the Model */
fixed Integer dof = 2;
fixed RealMatrix d0 = [2;2];
fixed RealMatrix sigma1 = diag(d0);

fixed RealMatrix mu0 = [0;0];
random RealMatrix mu ~ MultivarGaussian(mu0, sigma1);
fixed RealMatrix sigma2 = eye(dof);

/* Drawing from Wishart */
random Real n21 ~ Gaussian(0.0, 1.0);
random Real n22 ~ Gaussian(0.0, 1.0);
random Real n23 ~ Gaussian(0.0, 1.0);
random Real n24 ~ Gaussian(0.0, 1.0);
random Real n25 ~ Gaussian(0.0, 1.0);
random Real n26 ~ Gaussian(0.0, 1.0);
random Real n27 ~ Gaussian(0.0, 1.0);
random Real n28 ~ Gaussian(0.0, 1.0);
random Real n29 ~ Gaussian(0.0, 1.0);
random Real n30 ~ Gaussian(0.0, 1.0);

/* Making U */
/*random RealMatrix row1 = hstack(ChiSquare(1), n21); 
, n22, n23, n24);*/
/*random RealMatrix row2 = hstack(0.0, ChiSquare(2)); 
, n25, n26, n27);*/
/*
random RealMatrix row3 = hstack(0.0, 0.0, ChiSquare(3), n28, n29);
random RealMatrix row4 = hstack(0.0, 0.0, 0.0, ChiSquare(4), n30);
random RealMatrix row5 = hstack(0.0, 0.0, 0.0, 0.0, ChiSquare(5));*/
fixed RealMatrix row1 = hstack(0.0004887991799850683, 0.040142566816540944); 
fixed RealMatrix row2 = hstack(0.040142566816540944, 5.2666833927664065); 

fixed RealMatrix U = vstack(row1, row2); /*, row3, row4, row5);*/
fixed RealMatrix sigma_prior = U;

//fixed RealMatrix sigma_prior = transpose(U) * U;

fixed RealMatrix sigma_priorInv = inv(sigma_prior);
/* Making the weight vector */
random RealMatrix w ~ MultivarGaussian(mu, sigma_priorInv);

query w;

/* Provide Evidence */
